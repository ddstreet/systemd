'\" t
.\"     Title: systemd.path
.\"    Author: Lennart Poettering <lennart@poettering.net>
.\" Generator: DocBook XSL Stylesheets v1.75.2 <http://docbook.sf.net/>
.\"      Date: 10/07/2010
.\"    Manual: systemd.path
.\"    Source: systemd
.\"  Language: English
.\"
.TH "SYSTEMD\&.PATH" "5" "10/07/2010" "systemd" "systemd.path"
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
systemd.path \- systemd path configuration files
.SH "SYNOPSIS"
.PP
systemd\&.path
.SH "DESCRIPTION"
.PP
A unit configuration file whose name ends in
\&.path
encodes information about a path monitored by systemd, for path\-based activation\&.
.PP
This man page lists the configuration options specific to this unit type\&. See
\fBsystemd.unit\fR(5)
for the common options of all unit configuration files\&. The common configuration items are configured in the generic [Unit] and [Install] sections\&. The path specific configuration options are configured in the [Path] section\&.
.PP
For each path file, a matching unit file must exist, describing the unit to activate when the path changes\&. By default, a service by the same name as the path (except for the suffix) is activated\&. Example: a path file
foo\&.path
activates a matching service
foo\&.service\&. The unit to activate may be controlled by
\fIUnit=\fR
(see below)\&.
.PP
Internally, path units use the
\fBinotify\fR(7)
API to monitor file systems\&. Due to that, it suffers by the same limitations as inotify, and for example cannot be used to monitor files or directories changed by other machines on remote NFS file systems\&.
.PP
If an path unit is beneath another mount point in the file system hierarchy, a dependency between both units is created automatically\&.
.PP
Unless
\fIDefaultDependencies=\fR
is set to
\fBfalse\fR, path units will implicitly have dependencies of type
\fIConflicts=\fR
and
\fIBefore=\fR
on
shutdown\&.target\&. These ensure that path units are terminated cleanly prior to system shutdown\&. Only path units involved with early boot or late system shutdown should disable this option\&.
.SH "OPTIONS"
.PP
Path files must include a [Path] section, which carries information about the path(s) it monitors\&. The options specific to the [Path] section of path units are the following:
.PP
\fIPathExists=\fR, \fIPathChanged=\fR, \fIDirectoryNotEmpty=\fR
.RS 4
Defines paths to monitor for certain changes:
\fIPathExists=\fR
may be used to watch the mere existence of a file or directory\&. If the file specified exists the configured unit is activated\&.
\fIPathChanged=\fR
may be used to watch a file or directory and activate the configured unit whenever it changes or is modified\&.
\fIDirectoryNotEmpty=\fR
may be used to watch a directory and activate the configured unit whenever it contains at least one file\&.
.sp
The arguments of these directives must be absolute file system paths\&.
.sp
Multiple directives may be combined, of the same and of different types, to watch multiple paths\&.
.sp
If a path is already existing (in case of
\fIPathExists=\fR) or a directory already is not empty (in case of
\fIDirectoryNotEmpty=\fR) at the time the path unit is activated, then the configured unit is immediately activated as well\&. Something similar does not apply to
\fIPathChanged=\fR\&.
.RE
.PP
\fIUnit=\fR
.RS 4
The unit to activate when any of the configured paths changes\&. The argument is a unit name, whose suffix is not
\&.path\&. If not specified, this value defaults to a service that has the same name as the path unit, except for the suffix\&. (See above\&.) It is recommended that the unit name that is activated and the unit name of the path unit are named identical, except for the suffix\&.
.RE
.SH "SEE ALSO"
.PP

\fBsystemd\fR(1),
\fBsystemctl\fR(8),
\fBsystemd.unit\fR(5),
\fBsystemd.service\fR(5),
\fBinotify\fR(7)
.SH "AUTHOR"
.PP
\fBLennart Poettering\fR <\&lennart@poettering\&.net\&>
.RS 4
Developer
.RE
