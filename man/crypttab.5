'\" t
.\"     Title: crypttab
.\"    Author: Miloslav Trmac <mitr@redhat.com>
.\" Generator: DocBook XSL Stylesheets v1.77.1 <http://docbook.sf.net/>
.\"      Date: 03/07/2013
.\"    Manual: crypttab
.\"    Source: systemd
.\"  Language: English
.\"
.TH "CRYPTTAB" "5" "" "systemd" "crypttab"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
crypttab \- Configuration for encrypted block devices
.SH "SYNOPSIS"
.PP
/etc/crypttab
.SH "DESCRIPTION"
.PP
The
/etc/crypttab
file describes encrypted block devices that are set up during system boot\&.
.PP
Empty lines and lines starting with the # character are ignored\&. Each of the remaining lines describes one encrypted block device, fields on the line are delimited by white space\&. The first two fields are mandatory, the remaining two are optional\&.
.PP
The first field contains the name of the resulting encrypted block device; the device is set up within
/dev/mapper/\&.
.PP
The second field contains a path to the underlying block device, or a specification of a block device via
UUID=
followed by the UUID\&. If the block device contains a LUKS signature, it is opened as a LUKS encrypted partition; otherwise it is assumed to be a raw dm\-crypt partition\&.
.PP
The third field specifies the encryption password\&. If the field is not present or the password is set to none, the password has to be manually entered during system boot\&. Otherwise the field is interpreted as a path to a file containing the encryption password\&. For swap encryption
/dev/urandom
or the hardware device
/dev/hw_random
can be used as the password file; using
/dev/random
may prevent boot completion if the system does not have enough entropy to generate a truly random encryption key\&.
.PP
The fourth field, if present, is a comma\-delimited list of options\&. The following options are recognized:
.PP
\fIcipher=\fR
.RS 4
Specifies the cipher to use; see
\fBcryptsetup\fR(8)
for possible values and the default value of this option\&. A cipher with unpredictable IV values, such as
aes\-cbc\-essiv:sha256, is recommended\&.
.RE
.PP
\fIsize=\fR
.RS 4
Specifies the key size in bits; see
\fBcryptsetup\fR(8)
for possible values and the default value of this option\&.
.RE
.PP
\fIkeyfile\-size=\fR
.RS 4
Specifies the maximum number of bytes to read from the keyfile; see
\fBcryptsetup\fR(8)
for possible values and the default value of this option\&. This option is ignored in plain encryption mode, as the keyfile\-size is then given by the key size\&.
.RE
.PP
\fIkeyfile\-offset=\fR
.RS 4
Specifies the number of bytes to skip at the start of the keyfile; see
\fBcryptsetup\fR(8)
for possible values and the default value of this option\&.
.RE
.PP
\fIhash=\fR
.RS 4
Specifies the hash to use for password hashing; see
\fBcryptsetup\fR(8)
for possible values and the default value of this option\&.
.RE
.PP
\fItries=\fR
.RS 4
Specifies the maximum number of times the user is queried for a password\&.
.RE
.PP
\fIverify\fR
.RS 4
If the encryption password is read from console, it has to be entered twice (to prevent typos)\&.
.RE
.PP
\fIread\-only\fR, \fIreadonly\fR
.RS 4
Set up the encrypted block device in read\-only mode\&.
.RE
.PP
\fIallow\-discards\fR
.RS 4
Allow discard requests to be passed through the encrypted block device\&. This improves performance on SSD storage but has security implications\&.
.RE
.PP
\fIluks\fR
.RS 4
Force LUKS mode\&.
.RE
.PP
\fIplain\fR
.RS 4
Force plain encryption mode\&.
.RE
.PP
\fItimeout=\fR
.RS 4
Specify the timeout for querying for a password\&. If no unit is specified seconds is used\&. Supported units are s, ms, us, min, h, d\&. A timeout of 0 waits indefinitely\&.
.RE
.PP
\fInoauto\fR
.RS 4
This device will not be automatically unlocked on boot\&.
.RE
.PP
\fInofail\fR
.RS 4
The system will not wait for the device to show up and be unlocked at boot, and not fail the boot if it doesn\*(Aqt show up\&.
.RE
.PP
\fIswap\fR
.RS 4
The encrypted block device will be used as a swap partition, and will be formatted as a swap partition after setting up the encrypted block device, with
\fBmkswap\fR(8)\&.
.sp
WARNING: Using the
\fIswap\fR
option will destroy the contents of the named partition during every boot, so make sure the underlying block device is specified correctly\&.
.RE
.PP
\fItmp\fR
.RS 4
The encrypted block device will be prepared for using it as
/tmp
partition: it will be formatted using
\fBmke2fs\fR(8)\&.
.sp
WARNING: Using the
\fItmp\fR
option will destroy the contents of the named partition during every boot, so make sure the underlying block device is specified correctly\&.
.RE
.PP
At early boot and when the system manager configuration is reloaded this file is translated into native systemd units by
\fBsystemd-cryptsetup-generator\fR(8)\&.
.SH "EXAMPLE"
.PP
\fBExample\ \&1.\ \&/etc/crypttab example\fR
.PP
Set up two encrypted block devices with LUKS: one normal one for storage, and another one for usage as swap device\&.
.sp
.if n \{\
.RS 4
.\}
.nf
luks\-2505567a\-9e27\-4efe\-a4d5\-15ad146c258b UUID=2505567a\-9e27\-4efe\-a4d5\-15ad146c258b \- timeout=0
swap /dev/sda7 /dev/urandom swap
.fi
.if n \{\
.RE
.\}
.SH "SEE ALSO"
.PP

\fBsystemd\fR(1),
\fBsystemd-cryptsetup@.service\fR(8),
\fBsystemd-cryptsetup-generator\fR(8),
\fBcryptsetup\fR(8),
\fBmkswap\fR(8),
\fBmke2fs\fR(8)
