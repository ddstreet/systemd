From dff6c6295b1cb09d6da8ab054e66059e43247ab1 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Zbigniew=20J=C4=99drzejewski-Szmek?= <zbyszek@in.waw.pl>
Date: Wed, 3 Apr 2019 12:36:03 +0200
Subject: [PATCH] test-seccomp: fix compilation on arm64

It has no open().
---
 src/test/test-seccomp.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

--- a/src/test/test-seccomp.c
+++ b/src/test/test-seccomp.c
@@ -25,6 +25,7 @@
 #include <sys/mman.h>
 #include <sys/personality.h>
 #include <sys/shm.h>
+#include <sys/syscall.h>
 #include <sys/types.h>
 #include <unistd.h>
 
@@ -680,9 +681,14 @@ static void test_filter_sets_ordered(voi
 
 static int real_open(const char *path, int flags, mode_t mode) {
         /* glibc internally calls openat() when open() is requested. Let's hence define our own wrapper for
-         * testing purposes that calls the real syscall. */
+         * testing purposes that calls the real syscall, on architectures where SYS_open is defined. On
+         * other architectures, let's just fall back to the glibc call. */
 
+#ifdef SYS_open
         return (int) syscall(SYS_open, path, flags, mode);
+#else
+        return open(path, flags, mode);
+#endif
 }
 
 static void test_restrict_suid_sgid(void) {
