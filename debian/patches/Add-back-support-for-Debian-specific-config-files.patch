From: Michael Biebl <biebl@debian.org>
Date: Thu, 18 Jul 2013 20:11:02 +0200
Subject: Add back support for Debian specific config files

For now fallback to read the locale settings from /etc/default/locale.

This reverts the Debian specific bits from
46a2911bf2780f616396df5671dd901cc7cb54fd
99f861310d3f05f4e86cb9582a94b891dbb3382b
---
 src/basic/time-util.c    | 22 ++++++++++++++++++++--
 src/core/locale-setup.c  | 22 ++++++++++++++++++++++
 src/timedate/timedated.c | 10 ++++++++++
 3 files changed, 52 insertions(+), 2 deletions(-)

diff --git a/src/basic/time-util.c b/src/basic/time-util.c
index 531931f..34ddcfc 100644
--- a/src/basic/time-util.c
+++ b/src/basic/time-util.c
@@ -28,6 +28,7 @@
 #include "time-util.h"
 #include "path-util.h"
 #include "strv.h"
+#include "fileio.h"
 
 usec_t now(clockid_t clock_id) {
         struct timespec ts;
@@ -1053,8 +1054,25 @@ int get_timezone(char **tz) {
         int r;
 
         r = readlink_malloc("/etc/localtime", &t);
-        if (r < 0)
-                return r; /* returns EINVAL if not a symlink */
+        if (r < 0) {
+                if (r != -EINVAL)
+                        return r; /* returns EINVAL if not a symlink */
+
+                r = read_one_line_file("/etc/timezone", &t);
+                if (r < 0) {
+                        if (r != -ENOENT)
+                                log_warning("Failed to read /etc/timezone: %s", strerror(-r));
+                        return -EINVAL;
+                }
+
+                if (!timezone_is_valid(t))
+                        return -EINVAL;
+                z = strdup(t);
+                if (!z)
+                        return -ENOMEM;
+                *tz = z;
+                return 0;
+        }
 
         e = path_startswith(t, "/usr/share/zoneinfo/");
         if (!e)
diff --git a/src/core/locale-setup.c b/src/core/locale-setup.c
index 6961c26..c32d559 100644
--- a/src/core/locale-setup.c
+++ b/src/core/locale-setup.c
@@ -81,6 +81,28 @@ int locale_setup(char ***environment) {
                         log_warning_errno(r, "Failed to read /etc/locale.conf: %m");
         }
 
+        if (r <= 0) {
+                r = parse_env_file("/etc/default/locale", NEWLINE,
+                                   "LANG",              &variables[VARIABLE_LANG],
+                                   "LANGUAGE",          &variables[VARIABLE_LANGUAGE],
+                                   "LC_CTYPE",          &variables[VARIABLE_LC_CTYPE],
+                                   "LC_NUMERIC",        &variables[VARIABLE_LC_NUMERIC],
+                                   "LC_TIME",           &variables[VARIABLE_LC_TIME],
+                                   "LC_COLLATE",        &variables[VARIABLE_LC_COLLATE],
+                                   "LC_MONETARY",       &variables[VARIABLE_LC_MONETARY],
+                                   "LC_MESSAGES",       &variables[VARIABLE_LC_MESSAGES],
+                                   "LC_PAPER",          &variables[VARIABLE_LC_PAPER],
+                                   "LC_NAME",           &variables[VARIABLE_LC_NAME],
+                                   "LC_ADDRESS",        &variables[VARIABLE_LC_ADDRESS],
+                                   "LC_TELEPHONE",      &variables[VARIABLE_LC_TELEPHONE],
+                                   "LC_MEASUREMENT",    &variables[VARIABLE_LC_MEASUREMENT],
+                                   "LC_IDENTIFICATION", &variables[VARIABLE_LC_IDENTIFICATION],
+                                   NULL);
+
+                if (r < 0 && r != -ENOENT)
+                        log_warning("Failed to read /etc/default/locale: %s", strerror(-r));
+        }
+
         add = NULL;
         for (i = 0; i < _VARIABLE_LC_MAX; i++) {
                 char *s;
diff --git a/src/timedate/timedated.c b/src/timedate/timedated.c
index 6de9e24..6958d94 100644
--- a/src/timedate/timedated.c
+++ b/src/timedate/timedated.c
@@ -86,6 +86,7 @@ static int context_read_data(Context *c) {
 static int context_write_data_timezone(Context *c) {
         _cleanup_free_ char *p = NULL;
         int r = 0;
+        struct stat st;
 
         assert(c);
 
@@ -93,6 +94,9 @@ static int context_write_data_timezone(Context *c) {
                 if (unlink("/etc/localtime") < 0 && errno != ENOENT)
                         r = -errno;
 
+                if (unlink("/etc/timezone") < 0 && errno != ENOENT)
+                        r = -errno;
+
                 return r;
         }
 
@@ -104,6 +108,12 @@ static int context_write_data_timezone(Context *c) {
         if (r < 0)
                 return r;
 
+        if (stat("/etc/timezone", &st) == 0 && S_ISREG(st.st_mode)) {
+                r = write_string_file("/etc/timezone", c->zone, WRITE_STRING_FILE_CREATE|WRITE_STRING_FILE_ATOMIC);
+                if (r < 0)
+                        return r;
+        }
+
         return 0;
 }
 
