From: Dimitri John Ledkov <xnox@ubuntu.com>
Date: Tue, 1 Aug 2017 17:38:05 +0100
Subject: core: in execute, soft fail setting Nice priority,
 when permissions are denied

In unpriviledged containers Nice priority setting may not be permitted. Thus
log and ignore permission failure to set Nice priority in such
environments. This is similar to how OOMScoreAdjust is treated.
---
 src/core/execute.c | 16 +++++++++++-----
 1 file changed, 11 insertions(+), 5 deletions(-)

diff --git a/src/core/execute.c b/src/core/execute.c
index 0df3971..0b5aa53 100644
--- a/src/core/execute.c
+++ b/src/core/execute.c
@@ -2953,11 +2953,17 @@ static int exec_child(
                 }
         }
 
-        if (context->nice_set)
-                if (setpriority(PRIO_PROCESS, 0, context->nice) < 0) {
-                        *exit_status = EXIT_NICE;
-                        return log_unit_error_errno(unit, errno, "Failed to set up process scheduling priority (nice level): %m");
-                }
+        if (context->nice_set) {
+                r = setpriority(PRIO_PROCESS, 0, context->nice);
+                if (r == -EPERM || r == -EACCES) {
+                        log_open();
+                        log_unit_debug_errno(unit, r, "Failed to adjust Nice setting, assuming containerized execution, ignoring: %m");
+                        log_close();
+                } else if (r < 0) {
+                         *exit_status = EXIT_NICE;
+                         return log_unit_error_errno(unit, errno, "Failed to set up process scheduling priority (nice level): %m");
+                 }
+        }
 
         if (context->cpu_sched_set) {
                 struct sched_param param = {
