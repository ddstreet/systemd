From 59000ac10dd6af39e70073efb54c1bc6c4d0f52b Mon Sep 17 00:00:00 2001
From: Yu Watanabe <watanabe.yu+github@gmail.com>
Date: Wed, 30 Dec 2020 02:03:48 +0900
Subject: [PATCH 07/12] network: constify several arguments

[#18109,1/7] cherry-picked from 3141c8173632c100654144faa3d78b84bdffd72f
---
 src/network/networkd-routing-policy-rule.c | 18 +++++++++---------
 1 file changed, 9 insertions(+), 9 deletions(-)

--- a/src/network/networkd-routing-policy-rule.c
+++ b/src/network/networkd-routing-policy-rule.c
@@ -103,7 +103,7 @@ static int routing_policy_rule_new_stati
         return 0;
 }
 
-static int routing_policy_rule_copy(RoutingPolicyRule *dest, RoutingPolicyRule *src) {
+static int routing_policy_rule_copy(RoutingPolicyRule *dest, const RoutingPolicyRule *src) {
         _cleanup_free_ char *iif = NULL, *oif = NULL;
 
         assert(dest);
@@ -289,7 +289,7 @@ DEFINE_PRIVATE_HASH_OPS_WITH_KEY_DESTRUC
                 routing_policy_rule_compare_func,
                 routing_policy_rule_free);
 
-static int routing_policy_rule_get(Manager *m, RoutingPolicyRule *rule, RoutingPolicyRule **ret) {
+static int routing_policy_rule_get(Manager *m, const RoutingPolicyRule *rule, RoutingPolicyRule **ret) {
 
         RoutingPolicyRule *existing;
 
@@ -312,7 +312,7 @@ static int routing_policy_rule_get(Manag
         return -ENOENT;
 }
 
-static int routing_policy_rule_add_internal(Manager *m, Set **rules, RoutingPolicyRule *in, int family, RoutingPolicyRule **ret) {
+static int routing_policy_rule_add_internal(Manager *m, Set **rules, const RoutingPolicyRule *in, int family, RoutingPolicyRule **ret) {
         _cleanup_(routing_policy_rule_freep) RoutingPolicyRule *rule = NULL;
         int r;
 
@@ -347,15 +347,15 @@ static int routing_policy_rule_add_inter
         return 0;
 }
 
-static int routing_policy_rule_add(Manager *m, RoutingPolicyRule *rule, int family, RoutingPolicyRule **ret) {
+static int routing_policy_rule_add(Manager *m, const RoutingPolicyRule *rule, int family, RoutingPolicyRule **ret) {
         return routing_policy_rule_add_internal(m, &m->rules, rule, family, ret);
 }
 
-static int routing_policy_rule_add_foreign(Manager *m, RoutingPolicyRule *rule, RoutingPolicyRule **ret) {
+static int routing_policy_rule_add_foreign(Manager *m, const RoutingPolicyRule *rule, RoutingPolicyRule **ret) {
         return routing_policy_rule_add_internal(m, &m->rules_foreign, rule, rule->family, ret);
 }
 
-static int routing_policy_rule_set_netlink_message(RoutingPolicyRule *rule, sd_netlink_message *m, Link *link) {
+static int routing_policy_rule_set_netlink_message(const RoutingPolicyRule *rule, sd_netlink_message *m, Link *link) {
         int r;
 
         assert(rule);
@@ -482,7 +482,7 @@ static int routing_policy_rule_remove_ha
         return 1;
 }
 
-static int routing_policy_rule_remove(RoutingPolicyRule *rule, Manager *manager) {
+static int routing_policy_rule_remove(const RoutingPolicyRule *rule, Manager *manager) {
         _cleanup_(sd_netlink_message_unrefp) sd_netlink_message *m = NULL;
         int r;
 
@@ -548,7 +548,7 @@ static int routing_policy_rule_handler(s
         return 1;
 }
 
-static int routing_policy_rule_configure_internal(RoutingPolicyRule *rule, int family, Link *link) {
+static int routing_policy_rule_configure_internal(const RoutingPolicyRule *rule, int family, Link *link) {
         _cleanup_(sd_netlink_message_unrefp) sd_netlink_message *m = NULL;
         int r;
 
@@ -593,7 +593,7 @@ static int routing_policy_rule_configure
         return 1;
 }
 
-static int routing_policy_rule_configure(RoutingPolicyRule *rule, Link *link) {
+static int routing_policy_rule_configure(const RoutingPolicyRule *rule, Link *link) {
         int r;
 
         if (IN_SET(rule->family, AF_INET, AF_INET6))
