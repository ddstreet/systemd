From bd24b5d383082e1e770bc095591218b28991dc20 Mon Sep 17 00:00:00 2001
From: Yu Watanabe <watanabe.yu+github@gmail.com>
Date: Wed, 30 Dec 2020 03:32:07 +0900
Subject: [PATCH 12/12] test-network: add tests for fib rules with Family=both
 vs networkctl reload or reconfigure

[#18109,7/7] cherry-picked from 49ff3f34d549ad214924548f46a71315b5cd23c6
---
 ... routing-policy-rule-reconfigure1.network} |  2 +-
 .../routing-policy-rule-reconfigure2.network  | 33 ++++++++++++
 test/test-network/systemd-networkd-tests.py   | 53 ++++++++++++++-----
 3 files changed, 75 insertions(+), 13 deletions(-)
 rename test/test-network/conf/{routing-policy-rule-reconfigure.network => routing-policy-rule-reconfigure1.network} (96%)
 create mode 100644 test/test-network/conf/routing-policy-rule-reconfigure2.network

--- a/test/test-network/conf/routing-policy-rule-reconfigure.network
+++ /dev/null
@@ -1,33 +0,0 @@
-[Match]
-Name=test1
-
-[Network]
-IPv6AcceptRA=no
-
-# fwmark
-[RoutingPolicyRule]
-Table=1011
-Family=ipv4
-Priority=10111
-FirewallMark=1011
-
-# oif
-[RoutingPolicyRule]
-Table=1011
-Family=ipv4
-Priority=10112
-OutgoingInterface=test1
-
-# iif
-[RoutingPolicyRule]
-Table=1011
-Family=ipv4
-Priority=10113
-IncomingInterface=test1
-
-# source
-[RoutingPolicyRule]
-Table=1011
-Family=ipv4
-Priority=10114
-From=192.168.8.254
--- /dev/null
+++ b/test/test-network/conf/routing-policy-rule-reconfigure1.network
@@ -0,0 +1,33 @@
+[Match]
+Name=test1
+
+[Network]
+IPv6AcceptRA=no
+
+# fwmark
+[RoutingPolicyRule]
+Table=1011
+Family=ipv4
+Priority=10111
+FirewallMark=1011
+
+# oif
+[RoutingPolicyRule]
+Table=1011
+Family=ipv4
+Priority=10112
+OutgoingInterface=test1
+
+# iif
+[RoutingPolicyRule]
+Table=1011
+Family=both
+Priority=10113
+IncomingInterface=test1
+
+# source
+[RoutingPolicyRule]
+Table=1011
+Family=ipv4
+Priority=10114
+From=192.168.8.254
--- /dev/null
+++ b/test/test-network/conf/routing-policy-rule-reconfigure2.network
@@ -0,0 +1,33 @@
+[Match]
+Name=test1
+
+[Network]
+IPv6AcceptRA=no
+
+# fwmark
+[RoutingPolicyRule]
+Table=1011
+Family=ipv4
+Priority=10111
+FirewallMark=1011
+
+# oif
+[RoutingPolicyRule]
+Table=1011
+Family=both
+Priority=10112
+OutgoingInterface=test1
+
+# iif
+[RoutingPolicyRule]
+Table=1011
+Family=ipv4
+Priority=10113
+IncomingInterface=test1
+
+# source
+[RoutingPolicyRule]
+Table=1011
+Family=ipv4
+Priority=10114
+From=192.168.8.254
--- a/test/test-network/systemd-networkd-tests.py
+++ b/test/test-network/systemd-networkd-tests.py
@@ -1791,7 +1791,8 @@ class NetworkdNetworkTests(unittest.Test
         '26-link-local-addressing-ipv6.network',
         'routing-policy-rule-dummy98.network',
         'routing-policy-rule-test1.network',
-        'routing-policy-rule-reconfigure.network',
+        'routing-policy-rule-reconfigure1.network',
+        'routing-policy-rule-reconfigure2.network',
     ]
 
     routing_policy_rule_tables = ['7', '8', '9', '1011']
@@ -2075,37 +2076,65 @@ class NetworkdNetworkTests(unittest.Test
             stop_networkd(remove_state_files=False)
 
     def test_routing_policy_rule_reconfigure(self):
-        copy_unit_to_networkd_unit_path('routing-policy-rule-reconfigure.network', '11-dummy.netdev')
+        copy_unit_to_networkd_unit_path('routing-policy-rule-reconfigure2.network', '11-dummy.netdev')
         start_networkd()
         self.wait_online(['test1:degraded'])
 
         output = check_output('ip rule list table 1011')
         print(output)
-        self.assertRegex(output, '10111:	from all fwmark 0x3f3 lookup 1011')
-        self.assertRegex(output, '10112:	from all oif test1 lookup 1011')
-        self.assertRegex(output, '10113:	from all iif test1 lookup 1011')
-        self.assertRegex(output, '10114:	from 192.168.8.254 lookup 1011')
+        self.assertIn('10111:	from all fwmark 0x3f3 lookup 1011', output)
+        self.assertIn('10112:	from all oif test1 lookup 1011', output)
+        self.assertIn('10113:	from all iif test1 lookup 1011', output)
+        self.assertIn('10114:	from 192.168.8.254 lookup 1011', output)
+
+        output = check_output('ip -6 rule list table 1011')
+        print(output)
+        self.assertIn('10112:	from all oif test1 lookup 1011', output)
+
+        copy_unit_to_networkd_unit_path('routing-policy-rule-reconfigure1.network', '11-dummy.netdev')
+        run(*networkctl_cmd, 'reload', env=env)
+        time.sleep(1)
+        self.wait_online(['test1:degraded'])
+
+        output = check_output('ip rule list table 1011')
+        print(output)
+        self.assertIn('10111:	from all fwmark 0x3f3 lookup 1011', output)
+        self.assertIn('10112:	from all oif test1 lookup 1011', output)
+        self.assertIn('10113:	from all iif test1 lookup 1011', output)
+        self.assertIn('10114:	from 192.168.8.254 lookup 1011', output)
+
+        output = check_output('ip -6 rule list table 1011')
+        print(output)
+        self.assertNotIn('10112:	from all oif test1 lookup 1011', output)
+        self.assertIn('10113:	from all iif test1 lookup 1011', output)
 
         run('ip rule delete priority 10111')
         run('ip rule delete priority 10112')
         run('ip rule delete priority 10113')
         run('ip rule delete priority 10114')
-        run('ip rule delete priority 10115')
+        run('ip -6 rule delete priority 10113')
 
         output = check_output('ip rule list table 1011')
         print(output)
         self.assertEqual(output, '')
 
-        run(*networkctl_cmd, 'reconfigure', 'test1', env=env)
+        output = check_output('ip -6 rule list table 1011')
+        print(output)
+        self.assertEqual(output, '')
 
+        run(*networkctl_cmd, 'reconfigure', 'test1', env=env)
         self.wait_online(['test1:degraded'])
 
         output = check_output('ip rule list table 1011')
         print(output)
-        self.assertRegex(output, '10111:	from all fwmark 0x3f3 lookup 1011')
-        self.assertRegex(output, '10112:	from all oif test1 lookup 1011')
-        self.assertRegex(output, '10113:	from all iif test1 lookup 1011')
-        self.assertRegex(output, '10114:	from 192.168.8.254 lookup 1011')
+        self.assertIn('10111:	from all fwmark 0x3f3 lookup 1011', output)
+        self.assertIn('10112:	from all oif test1 lookup 1011', output)
+        self.assertIn('10113:	from all iif test1 lookup 1011', output)
+        self.assertIn('10114:	from 192.168.8.254 lookup 1011', output)
+
+        output = check_output('ip -6 rule list table 1011')
+        print(output)
+        self.assertIn('10113:	from all iif test1 lookup 1011', output)
 
     @expectedFailureIfRoutingPolicyPortRangeIsNotAvailable()
     def test_routing_policy_rule_port_range(self):
