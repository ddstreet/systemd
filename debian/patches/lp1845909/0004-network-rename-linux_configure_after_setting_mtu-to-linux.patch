From: Dan Streetman <ddstreet@canonical.com>
Date: Thu, 19 Dec 2019 13:14:42 -0500
Subject: network: rename linux_configure_after_setting_mtu() to
 linux_configure_continue()
Bug: https://github.com/systemd/systemd/issues/13882
Bug-Ubuntu: https://bugs.launchpad.net/ubuntu/+source/systemd/+bug/1845909
Origin: upstream, https://github.com/systemd/systemd/pull/13927

This is a simple rename to make the function name more generic;
the next commit expands its usage to more than only the mtu handler.
---
 src/network/networkd-link.c | 35 ++++++++++++++++++++++++-----------
 1 file changed, 24 insertions(+), 11 deletions(-)

--- a/src/network/networkd-link.c
+++ b/src/network/networkd-link.c
@@ -1329,7 +1329,7 @@ static int link_set_handler(sd_netlink *
         return 0;
 }
 
-static int link_configure_after_setting_mtu(Link *link);
+static int link_configure_continue(Link *link);
 
 static int set_mtu_handler(sd_netlink *rtnl, sd_netlink_message *m, void *userdata) {
         _cleanup_link_unref_ Link *link = userdata;
@@ -1353,7 +1353,7 @@ static int set_mtu_handler(sd_netlink *r
         log_link_debug(link, "Setting MTU done.");
 
         if (link->state == LINK_STATE_PENDING)
-                (void) link_configure_after_setting_mtu(link);
+                (void) link_configure_continue(link);
 
         return 1;
 }
@@ -2892,10 +2892,22 @@ static int link_configure(Link *link) {
         if (r < 0)
                 return r;
 
-        return link_configure_after_setting_mtu(link);
+        return link_configure_continue(link);
 }
 
-static int link_configure_after_setting_mtu(Link *link) {
+/* The configuration continues in this separate function, instead of
+ * including this in the above link_configure() function, for two
+ * reasons:
+ * 1) some devices reset the link when the mtu is set, which caused
+ *    an infinite loop here in networkd; see:
+ *    https://github.com/systemd/systemd/issues/6593
+ *    https://github.com/systemd/systemd/issues/9831
+ * 2) if ipv6ll is disabled, then bringing the interface up must be
+ *    delayed until after we get confirmation from the kernel that
+ *    the addr_gen_mode parameter has been set (via netlink), see:
+ *    https://github.com/systemd/systemd/issues/13882
+ */
+static int link_configure_continue(Link *link) {
         int r;
 
         assert(link);
