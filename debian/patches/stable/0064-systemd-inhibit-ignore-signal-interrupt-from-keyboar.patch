From 9dc914916daacd120bbf52e4989764b3e0cbb1a6 Mon Sep 17 00:00:00 2001
From: Christian Hesse <mail@eworm.de>
Date: Wed, 28 Mar 2018 21:58:10 +0200
Subject: [PATCH] systemd-inhibit: ignore signal interrupt from keyboard
 (#8569)

By default both processes, systemd-inhibit and the forked one, receive
the signals. Pressing Ctrl+C on the keyboard results in SIGINT being
sent to the processes, followed by SIGTERM being sent to the forked
process when systemd-inhibit exits. This can cause trouble when the
forked process does not clean up properly but exit immediately.

Instead make systemd-inhibit ignore SIGINT, leaving it to the forked
process to clean up and exit.

(cherry picked from commit 106f12a08fcacef713438fc055872592399deeed)
---
 src/login/inhibit.c | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/src/login/inhibit.c b/src/login/inhibit.c
index 6b5d9c29b9..c118421e6b 100644
--- a/src/login/inhibit.c
+++ b/src/login/inhibit.c
@@ -254,6 +254,9 @@ int main(int argc, char *argv[]) {
                 _cleanup_free_ char *w = NULL;
                 pid_t pid;
 
+                /* Ignore SIGINT and allow the forked process to receive it */
+                (void) ignore_signals(SIGINT, -1);
+
                 if (!arg_who)
                         arg_who = w = strv_join(argv + optind, " ");
 
-- 
2.17.0

