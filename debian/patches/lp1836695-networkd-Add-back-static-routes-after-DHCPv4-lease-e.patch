From b5799eeb0787deacb30d5984f6ac78f88f23b97e Mon Sep 17 00:00:00 2001
From: Susant Sahani <ssahani@redhat.com>
Date: Mon, 29 Apr 2019 10:32:34 +0530
Subject: [PATCH] networkd: Add back static routes after DHCPv4 lease expires.
Bug: https://github.com/systemd/systemd/issues/12426
Bug-Ubuntu: https://bugs.launchpad.net/ubuntu/+source/systemd/+bug/1836695
Origin: upstream, https://github.com/systemd/systemd/pull/12427

1. When the DHCPv4 lease expires kernel removes the route. So add it back
when we gain lease again.

Closes https://github.com/systemd/systemd/issues/12426

2. When UseRoutes=false do not remove router
---
 src/network/networkd-dhcp4.c | 9 ++++++---
 src/network/networkd-link.c  | 2 +-
 src/network/networkd-link.h  | 1 +
 3 files changed, 8 insertions(+), 4 deletions(-)

--- a/src/network/networkd-dhcp4.c
+++ b/src/network/networkd-dhcp4.c
@@ -236,10 +236,7 @@ static int dhcp_lease_lost(Link *link) {
                                 }
                         }
                 }
-        }
 
-        r = address_new(&address);
-        if (r >= 0) {
                 r = sd_dhcp_lease_get_router(link->dhcp_lease, &gateway);
                 if (r >= 0) {
                         _cleanup_route_free_ Route *route_gw = NULL;
@@ -265,7 +262,10 @@ static int dhcp_lease_lost(Link *link) {
                                              link_route_remove_handler);
                         }
                 }
+        }
 
+        r = address_new(&address);
+        if (r >= 0) {
                 r = sd_dhcp_lease_get_address(link->dhcp_lease, &addr);
                 if (r >= 0) {
                         r = sd_dhcp_lease_get_netmask(link->dhcp_lease, &netmask);
@@ -334,6 +334,9 @@ static int dhcp4_address_handler(sd_netl
 
         link_set_dhcp_routes(link);
 
+        /* Add back static routes since kernel removes while DHCPv4 address is removed from when lease expires */
+        link_request_set_routes(link);
+
         if (link->dhcp4_messages == 0) {
                 link->dhcp4_configured = true;
                 link_check_ready(link);
--- a/src/network/networkd-link.c
+++ b/src/network/networkd-link.c
@@ -810,7 +810,7 @@ static int route_handler(sd_netlink *rtn
         return 1;
 }
 
-static int link_request_set_routes(Link *link) {
+int link_request_set_routes(Link *link) {
         Route *rt;
         int r;
 
--- a/src/network/networkd-link.h
+++ b/src/network/networkd-link.h
@@ -222,6 +222,7 @@ DEFINE_TRIVIAL_CLEANUP_FUNC(Link*, link_
 
 #define LOG_LINK_MESSAGE(link, fmt, ...) "MESSAGE=%s: " fmt, (link)->ifname, ##__VA_ARGS__
 #define LOG_LINK_INTERFACE(link) "INTERFACE=%s", (link)->ifname
+int link_request_set_routes(Link *link);
 
 #define ADDRESS_FMT_VAL(address)                   \
         be32toh((address).s_addr) >> 24,           \
