Description: Workaround timezone issues cause by Ubuntu Core's read-only /etc
 This is another patch in a series of existing ones working around this issue
 on Ubuntu Core.
Author: Nick Rosbrook <nick.rosbrook@canonical.com>
Bug-Ubuntu: https://bugs.launchpad.net/ubuntu/+source/systemd/+bug/1981042
Bug-Ubuntu: https://bugs.launchpad.net/snappy/+bug/1953172
Forwarded: not-needed (part of read-only /etc workaround)
Last-Update: 2022-07-20
---
--- a/src/core/manager.c
+++ b/src/core/manager.c
@@ -423,6 +423,25 @@
         return 0;
 }
 
+/* Hack for Ubuntu Phone/Core: check if path is an existing symlink to
+ * /etc/writable; if it is, update that instead */
+static const char* writable_filename(const char *path) {
+        ssize_t r;
+        static char realfile_buf[PATH_MAX];
+        _cleanup_free_ char *realfile = NULL;
+        const char *result = path;
+        int orig_errno = errno;
+
+        r = readlink_and_make_absolute(path, &realfile);
+        if (r >= 0 && startswith(realfile, "/etc/writable")) {
+                snprintf(realfile_buf, sizeof(realfile_buf), "%s", realfile);
+                result = realfile_buf;
+        }
+
+        errno = orig_errno;
+        return result;
+}
+
 static int manager_read_timezone_stat(Manager *m) {
         struct stat st;
         bool changed;
@@ -430,7 +449,7 @@
         assert(m);
 
         /* Read the current stat() data of /etc/localtime so that we detect changes */
-        if (lstat("/etc/localtime", &st) < 0) {
+        if (lstat(writable_filename("/etc/localtime"), &st) < 0) {
                 log_debug_errno(errno, "Failed to stat /etc/localtime, ignoring: %m");
                 changed = m->etc_localtime_accessible;
                 m->etc_localtime_accessible = false;
@@ -467,7 +486,7 @@
          * Note that we create the new event source first here, before releasing the old one. This should optimize
          * behaviour as this way sd-event can reuse the old watch in case the inode didn't change. */
 
-        r = sd_event_add_inotify(m->event, &new_event, "/etc/localtime",
+        r = sd_event_add_inotify(m->event, &new_event, writable_filename("/etc/localtime"),
                                  IN_ATTRIB|IN_MOVE_SELF|IN_CLOSE_WRITE|IN_DONT_FOLLOW, manager_dispatch_timezone_change, m);
         if (r == -ENOENT) {
                 /* If the file doesn't exist yet, subscribe to /etc instead, and wait until it is created either by
--- a/src/firstboot/firstboot.c
+++ b/src/firstboot/firstboot.c
@@ -474,11 +474,30 @@
         return 0;
 }
 
+/* Hack for Ubuntu Phone/Core: check if path is an existing symlink to
+ * /etc/writable; if it is, update that instead */
+static const char* writable_filename(const char *path) {
+        ssize_t r;
+        static char realfile_buf[PATH_MAX];
+        _cleanup_free_ char *realfile = NULL;
+        const char *result = path;
+        int orig_errno = errno;
+
+        r = readlink_and_make_absolute(path, &realfile);
+        if (r >= 0 && startswith(realfile, "/etc/writable")) {
+                snprintf(realfile_buf, sizeof(realfile_buf), "%s", realfile);
+                result = realfile_buf;
+        }
+
+        errno = orig_errno;
+        return result;
+}
+
 static int process_timezone(void) {
         const char *etc_localtime, *e;
         int r;
 
-        etc_localtime = prefix_roota(arg_root, "/etc/localtime");
+        etc_localtime = prefix_roota(arg_root, writable_filename("/etc/localtime"));
         if (laccess(etc_localtime, F_OK) >= 0 && !arg_force) {
                 log_debug("Found %s, assuming timezone has been configured.",
                           etc_localtime);
@@ -488,7 +507,7 @@
         if (arg_copy_timezone && arg_root) {
                 _cleanup_free_ char *p = NULL;
 
-                r = readlink_malloc("/etc/localtime", &p);
+                r = readlink_malloc(writable_filename("/etc/localtime"), &p);
                 if (r != -ENOENT) {
                         if (r < 0)
                                 return log_error_errno(r, "Failed to read host timezone: %m");
@@ -510,7 +529,7 @@
         if (isempty(arg_timezone))
                 return 0;
 
-        e = strjoina("../usr/share/zoneinfo/", arg_timezone);
+        e = strjoina("/usr/share/zoneinfo/", arg_timezone);
 
         (void) mkdir_parents(etc_localtime, 0755);
         r = symlink_atomic(e, etc_localtime);
