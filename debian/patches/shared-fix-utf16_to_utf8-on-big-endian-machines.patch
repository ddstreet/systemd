From: Martin Pitt <martin.pitt@ubuntu.com>
Date: Wed, 18 Feb 2015 06:45:34 +0100
Subject: shared: fix utf16_to_utf8() on big endian machines

We get the utf16 data passed as void* thus we need to correctly read the 16 bit
words in big endian order on big endian machines.

Spotted by failure of test_utf16_to_utf8() on PowerPC.

https://bugs.debian.org/778654
---
 src/shared/utf8.c | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/src/shared/utf8.c b/src/shared/utf8.c
index 013c110..751ee3f 100644
--- a/src/shared/utf8.c
+++ b/src/shared/utf8.c
@@ -322,7 +322,11 @@ char *utf16_to_utf8(const void *s, size_t length) {
 
                 /* see RFC 2781 section 2.2 */
 
+#if __BYTE_ORDER == __LITTLE_ENDIAN
                 w1 = f[1] << 8 | f[0];
+#else
+                w1 = f[0] << 8 | f[1];
+#endif
                 f += 2;
 
                 if (!utf16_is_surrogate(w1)) {
@@ -336,7 +340,11 @@ char *utf16_to_utf8(const void *s, size_t length) {
                 else if (f >= (const uint8_t*) s + length)
                         break;
 
+#if __BYTE_ORDER == __LITTLE_ENDIAN
                 w2 = f[1] << 8 | f[0];
+#else
+                w2 = f[0] << 8 | f[1];
+#endif
                 f += 2;
 
                 if (!utf16_is_trailing_surrogate(w2)) {
