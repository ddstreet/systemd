This documents udev integration Debian specifics. Please see man udev(7) and
its referenced manpages for general documentation.

Network interface naming
~~~~~~~~~~~~~~~~~~~~~~~~
The persistent names of network interfaces by default are automatically
written to /etc/udev/rules.d/70-persistent-net.rules .
Users can add their own rules there or at any other place before 70.
MAC addresses matching is literal, so they must be written in lower case.
To disable persistent naming of network interfaces, create an empty
/etc/udev/rules.d/75-persistent-net-generator.rules file to override
the one in /lib/udev/rules.d/ and delete
/etc/udev/rules.d/70-persistent-net.rules.

Beware: programs which rename network interfaces like ifrename and nameif
will let udev relay events for the old names and should not be used.

Usually network interfaces are renamed after the root file system has
been mounted, so if the root file system is mounted over the network
then the 70-persistent-net.rules file must be copied to the initramfs.
In most cases this is done automatically, but some setups may require
explicitly setting "export NEED_PERSISTENT_NET=yes" in a file in
/etc/initramfs-tools/conf.d/ .
If 70-persistent-net.rules is copied to the initramfs then it must be
updated every time a new interface is added.

Optional: ifnames network interface naming
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Since version 197 udev has a builtin persistant name generator which checks
firmware/BIOS provided index numbers or slot names (similar to biosdevname),
falls back to slot names (PCI numbers, etc., in the spirit of
/dev/disks/by-path/), and then optionally (not done by default) falls back to
MAC address, and generates names based on these properties.

This avoids inherent race conditions (which sometimes caused collisions and
interface names like "rename1" with the old 75-persistent-net-generator.rules),
avoids having to write any state into /etc (for read-only root etc.), also
works in virtualized environments (75-persistent-net-generator is disabled
there), and provides more natural "location oriented" names for PCI cards (so
that replacing a broken network card does not change the name).

You can enable this by putting "net.ifnames=1" into the kernel command line
(e. g. in /etc/default/grub's GRUB_CMDLINE_LINUX_DEFAULT) and removing
/etc/udev/rules.d/70-persistent-net.rules.

Custom net interface naming
~~~~~~~~~~~~~~~~~~~~~~~~~~~
In some cases it is convenient to define your own specific names for network
interfaces. These can be customized in two different ways:

 * You can create your own names via udev rules, based on arbitrary attribute
   and property matches. See man udev(7) for documentation how to write udev
   rules. For example, you can create /etc/udev/rules.d/76-netnames.rules with

   ------------ snip ----------
   # identify device by MAC address
   SUBSYSTEM=="net", ACTION=="add", ATTR{address}=="11:22:aa:bb:cc:33", NAME="eth-dmz"

   # identify by vendor/model ID
   SUBSYSTEM=="net", ACTION=="add", ENV{ID_VENDOR_ID}=="0x8086", \
       ENV{ID_MODEL_ID}=="0x1502", NAME="eth-intel-gb"

   # USB device by path
   # get ID_PATH if not present yet
   ENV{ID_PATH}=="", IMPORT{builtin}="path_id"
   SUBSYSTEM=="net", ACTION=="add", ENV{ID_PATH}=="*-usb-0:3:1*", NAME="eth-blue-hub"
   ------------ snip ----------

   The name of the rules file needs to have a prefix smaller than "80" so that
   it runs before /lib/udev/rules.d/80-net-setup-link.rules, and should have a
   prefix bigger than "75" so that it runs after 75-net-description.rules and
   thus you can use matches on ID_VENDOR and similar properties.

 * If you use net.ifnames, you can change the policy (kernel/bios/path/MAC
   based naming) in a *.link file, for individual devices or entire device
   classes. See man systemd.link(5) for details about this. The default policy
   is in /lib/systemd/network/99-default.link.

Hotplugged Network Interfaces
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
After receiving events about network interfaces, net.agent will call
ifupdown using the --allow=hotplug option. This makes the program act
only on interfaces marked with the "allow-hotplug" statement.
E.g: "allow-hotplug eth0" instead of the usual "auto eth0".
Under SysVinit, the loopback interface must always be configured with "auto
lo". Under systemd it is not necessary to explicitly configure "lo".

Using udev with LDAP or NIS
~~~~~~~~~~~~~~~~~~~~~~~~~~~
If the rules files reference usernames or groups not present in the
/etc/{passwd,group} files and the system is configured to use a
network-based database like LDAP or NIS then udev may fail at boot time
because users and groups are looked up well before the network has been
initialized.
A possible solution is to configure /etc/nsswitch.conf like this:

  passwd:         files ldap [UNAVAIL=return]
  group:          files ldap [UNAVAIL=return]

The nsswitch.conf syntax is documented in the glibc manual.
